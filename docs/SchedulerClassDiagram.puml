@startuml
!define SCHEDULER_COLOR #CDF260

skinparam class {
    BackgroundColor SCHEDULER_COLOR
}

hide circle
hide empty members
skinparam classAttributeIconSize 0

package "Scheduler Component" <<Rectangle>> {
    class Scheduler
    class "{abstract}\nPersonList" as PersonList
    class PatientList
    class "MedicalStaffList" as StaffList
    class SchedulerAppointmentList
    class "{abstract}\nPerson" as Person
    class Patient
    class Staff
    class PersonalAppointmentList
    class Appointment
    enum "<<enumeration>>\nPersonType" as PersonType
}

class Scheduler {
    +addPatient(patient: Person): int
    +addStaff(staff: Person): int
    +deletePatient(patientId: int): void
    +deleteStaff(staffId: int): void
    +editPatient(patientId: int, newPatientData: Person): void
    +editStaff(staffId: int, newStaffData: Person): void
    +getPatientInfo(patientId: int): String
    +getStaffInfo(staffId: int): String
    +listPatients(getArchivedPatients: boolean): String
    +listStaff(getArchivedStaff: boolean): String
    +addAppointment(appointment: Appointment): int
    +deleteAppointment(appointmentId: int): void
    +editAppointment(appointmentId: int, newAppointment: Appointment): void
    +getAppointment(appointmentId): Appointment
    +listAllAppointments(): String
}

class PersonList {
    -persons: HashMap<Integer, Person>
    -lastId: int
    +addPerson(person: Person)
    +editPerson(personId: int, person: newPersonData)
    +deletePerson(personId: int)

}

class Person {
    #icNumber: String
    #name:String
    #phoneNumber: String
    #emailAddress: String
    #residentialAddress: String
    #isArchived: boolean
}

enum PersonType {
    PATIENT
    STAFF
}

class PersonalAppointmentList {
    -appointments: TreeSet<Appointment>
    +addAppointment(appointment: Appointment): void
    +deleteAppointment(appointmentId: int): void
}

class SchedulerAppointmentList {
    -appointments: HashMap<Integer, Appointment>
    -lastId: int
    +addAppointment(appointment: Appointment): int
    +deleteAppointment(appointmentId: int): void
    +getAppointment(appointmentId: int): Appointment
}

class Appointment {
    -appointmentId: int
    -patientId: int
    -medicalStaffId: int
    -dateTimeCode: int
}



PersonList <|-down- PatientList
PersonList <|-down- StaffList
Person <|-up- Patient
Person <|-up- Staff
Person -right-> "1" PersonType
Person -left-> "1" PersonalAppointmentList
PatientList o-down- "*" Patient
StaffList o-down- "*" Staff
Scheduler -right-> "1" PatientList
Scheduler -right-> "1" StaffList
Scheduler -down--> "1" SchedulerAppointmentList
PersonalAppointmentList o-down- "*" Appointment
SchedulerAppointmentList o-down- "*" Appointment


note as MethodsNote
Note: Not all methods are
included in this diagram.
end note
@enduml